;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 2.0.10
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.


;;;SWIG wrapper code starts here

(cl:defmacro defanonenum (cl:&body enums)
   "Converts anonymous enums to defconstants."
  `(cl:progn ,@(cl:loop for value in enums
                        for index = 0 then (cl:1+ index)
                        when (cl:listp value) do (cl:setf index (cl:second value)
                                                          value (cl:first value))
                        collect `(cl:defconstant ,value ,index))))

(cl:eval-when (:compile-toplevel :load-toplevel)
  (cl:unless (cl:fboundp 'swig-lispify)
    (cl:defun swig-lispify (name flag cl:&optional (package cl:*package*))
      (cl:labels ((helper (lst last rest cl:&aux (c (cl:car lst)))
                    (cl:cond
                      ((cl:null lst)
                       rest)
                      ((cl:upper-case-p c)
                       (helper (cl:cdr lst) 'upper
                               (cl:case last
                                 ((lower digit) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:lower-case-p c)
                       (helper (cl:cdr lst) 'lower (cl:cons (cl:char-upcase c) rest)))
                      ((cl:digit-char-p c)
                       (helper (cl:cdr lst) 'digit 
                               (cl:case last
                                 ((upper lower) (cl:list* c #\- rest))
                                 (cl:t (cl:cons c rest)))))
                      ((cl:char-equal c #\_)
                       (helper (cl:cdr lst) '_ (cl:cons #\- rest)))
                      (cl:t
                       (cl:error "Invalid character: ~A" c)))))
        (cl:let ((fix (cl:case flag
                        ((constant enumvalue) "+")
                        (variable "*")
                        (cl:t ""))))
          (cl:intern
           (cl:concatenate
            'cl:string
            fix
            (cl:nreverse (helper (cl:concatenate 'cl:list name) cl:nil cl:nil))
            fix)
           package))))))

;;;SWIG wrapper code ends here


(cffi:defcenum LLVMAttribute
	(:LLVMZExtAttribute #.(cl:ash 1 0))
	(:LLVMSExtAttribute #.(cl:ash 1 1))
	(:LLVMNoReturnAttribute #.(cl:ash 1 2))
	(:LLVMInRegAttribute #.(cl:ash 1 3))
	(:LLVMStructRetAttribute #.(cl:ash 1 4))
	(:LLVMNoUnwindAttribute #.(cl:ash 1 5))
	(:LLVMNoAliasAttribute #.(cl:ash 1 6))
	(:LLVMByValAttribute #.(cl:ash 1 7))
	(:LLVMNestAttribute #.(cl:ash 1 8))
	(:LLVMReadNoneAttribute #.(cl:ash 1 9))
	(:LLVMReadOnlyAttribute #.(cl:ash 1 10))
	(:LLVMNoInlineAttribute #.(cl:ash 1 11))
	(:LLVMAlwaysInlineAttribute #.(cl:ash 1 12))
	(:LLVMOptimizeForSizeAttribute #.(cl:ash 1 13))
	(:LLVMStackProtectAttribute #.(cl:ash 1 14))
	(:LLVMStackProtectReqAttribute #.(cl:ash 1 15))
	(:LLVMAlignment #.(cl:ash 31 16))
	(:LLVMNoCaptureAttribute #.(cl:ash 1 21))
	(:LLVMNoRedZoneAttribute #.(cl:ash 1 22))
	(:LLVMNoImplicitFloatAttribute #.(cl:ash 1 23))
	(:LLVMNakedAttribute #.(cl:ash 1 24))
	(:LLVMInlineHintAttribute #.(cl:ash 1 25))
	(:LLVMStackAlignment #.(cl:ash 7 26))
	(:LLVMReturnsTwice #.(cl:ash 1 29))
	(:LLVMUWTable #.(cl:ash 1 30))
	(:LLVMNonLazyBind #.(cl:ash 1 31)))

(cffi:defcenum LLVMOpcode
	(:LLVMRet #.1)
	(:LLVMBr #.2)
	(:LLVMSwitch #.3)
	(:LLVMIndirectBr #.4)
	(:LLVMInvoke #.5)
	(:LLVMUnreachable #.7)
	(:LLVMAdd #.8)
	(:LLVMFAdd #.9)
	(:LLVMSub #.10)
	(:LLVMFSub #.11)
	(:LLVMMul #.12)
	(:LLVMFMul #.13)
	(:LLVMUDiv #.14)
	(:LLVMSDiv #.15)
	(:LLVMFDiv #.16)
	(:LLVMURem #.17)
	(:LLVMSRem #.18)
	(:LLVMFRem #.19)
	(:LLVMShl #.20)
	(:LLVMLShr #.21)
	(:LLVMAShr #.22)
	(:LLVMAnd #.23)
	(:LLVMOr #.24)
	(:LLVMXor #.25)
	(:LLVMAlloca #.26)
	(:LLVMLoad #.27)
	(:LLVMStore #.28)
	(:LLVMGetElementPtr #.29)
	(:LLVMTrunc #.30)
	(:LLVMZExt #.31)
	(:LLVMSExt #.32)
	(:LLVMFPToUI #.33)
	(:LLVMFPToSI #.34)
	(:LLVMUIToFP #.35)
	(:LLVMSIToFP #.36)
	(:LLVMFPTrunc #.37)
	(:LLVMFPExt #.38)
	(:LLVMPtrToInt #.39)
	(:LLVMIntToPtr #.40)
	(:LLVMBitCast #.41)
	(:LLVMAddrSpaceCast #.60)
	(:LLVMICmp #.42)
	(:LLVMFCmp #.43)
	(:LLVMPHI #.44)
	(:LLVMCall #.45)
	(:LLVMSelect #.46)
	(:LLVMUserOp1 #.47)
	(:LLVMUserOp2 #.48)
	(:LLVMVAArg #.49)
	(:LLVMExtractElement #.50)
	(:LLVMInsertElement #.51)
	(:LLVMShuffleVector #.52)
	(:LLVMExtractValue #.53)
	(:LLVMInsertValue #.54)
	(:LLVMFence #.55)
	(:LLVMAtomicCmpXchg #.56)
	(:LLVMAtomicRMW #.57)
	(:LLVMResume #.58)
	(:LLVMLandingPad #.59))

(cffi:defcenum LLVMTypeKind
	:LLVMVoidTypeKind
	:LLVMHalfTypeKind
	:LLVMFloatTypeKind
	:LLVMDoubleTypeKind
	:LLVMX86_FP80TypeKind
	:LLVMFP128TypeKind
	:LLVMPPC_FP128TypeKind
	:LLVMLabelTypeKind
	:LLVMIntegerTypeKind
	:LLVMFunctionTypeKind
	:LLVMStructTypeKind
	:LLVMArrayTypeKind
	:LLVMPointerTypeKind
	:LLVMVectorTypeKind
	:LLVMMetadataTypeKind
	:LLVMX86_MMXTypeKind)

(cffi:defcenum LLVMLinkage
	:LLVMExternalLinkage
	:LLVMAvailableExternallyLinkage
	:LLVMLinkOnceAnyLinkage
	:LLVMLinkOnceODRLinkage
	:LLVMLinkOnceODRAutoHideLinkage
	:LLVMWeakAnyLinkage
	:LLVMWeakODRLinkage
	:LLVMAppendingLinkage
	:LLVMInternalLinkage
	:LLVMPrivateLinkage
	:LLVMDLLImportLinkage
	:LLVMDLLExportLinkage
	:LLVMExternalWeakLinkage
	:LLVMGhostLinkage
	:LLVMCommonLinkage
	:LLVMLinkerPrivateLinkage
	:LLVMLinkerPrivateWeakLinkage)

(cffi:defcenum LLVMVisibility
	:LLVMDefaultVisibility
	:LLVMHiddenVisibility
	:LLVMProtectedVisibility)

(cffi:defcenum LLVMCallConv
	(:LLVMCCallConv #.0)
	(:LLVMFastCallConv #.8)
	(:LLVMColdCallConv #.9)
	(:LLVMWebKitJSCallConv #.12)
	(:LLVMAnyRegCallConv #.13)
	(:LLVMX86StdcallCallConv #.64)
	(:LLVMX86FastcallCallConv #.65))

(cffi:defcenum LLVMIntPredicate
	(:LLVMIntEQ #.32)
	:LLVMIntNE
	:LLVMIntUGT
	:LLVMIntUGE
	:LLVMIntULT
	:LLVMIntULE
	:LLVMIntSGT
	:LLVMIntSGE
	:LLVMIntSLT
	:LLVMIntSLE)

(cffi:defcenum LLVMRealPredicate
	:LLVMRealPredicateFalse
	:LLVMRealOEQ
	:LLVMRealOGT
	:LLVMRealOGE
	:LLVMRealOLT
	:LLVMRealOLE
	:LLVMRealONE
	:LLVMRealORD
	:LLVMRealUNO
	:LLVMRealUEQ
	:LLVMRealUGT
	:LLVMRealUGE
	:LLVMRealULT
	:LLVMRealULE
	:LLVMRealUNE
	:LLVMRealPredicateTrue)

(cffi:defcenum LLVMLandingPadClauseTy
	:LLVMLandingPadCatch
	:LLVMLandingPadFilter)

(cffi:defcenum LLVMThreadLocalMode
	(:LLVMNotThreadLocal #.0)
	:LLVMGeneralDynamicTLSModel
	:LLVMLocalDynamicTLSModel
	:LLVMInitialExecTLSModel
	:LLVMLocalExecTLSModel)

(cffi:defcenum LLVMAtomicOrdering
	(:LLVMAtomicOrderingNotAtomic #.0)
	(:LLVMAtomicOrderingUnordered #.1)
	(:LLVMAtomicOrderingMonotonic #.2)
	(:LLVMAtomicOrderingAcquire #.4)
	(:LLVMAtomicOrderingRelease #.5)
	(:LLVMAtomicOrderingAcquireRelease #.6)
	(:LLVMAtomicOrderingSequentiallyConsistent #.7))

(cffi:defcenum LLVMAtomicRMWBinOp
	:LLVMAtomicRMWBinOpXchg
	:LLVMAtomicRMWBinOpAdd
	:LLVMAtomicRMWBinOpSub
	:LLVMAtomicRMWBinOpAnd
	:LLVMAtomicRMWBinOpNand
	:LLVMAtomicRMWBinOpOr
	:LLVMAtomicRMWBinOpXor
	:LLVMAtomicRMWBinOpMax
	:LLVMAtomicRMWBinOpMin
	:LLVMAtomicRMWBinOpUMax
	:LLVMAtomicRMWBinOpUMin)

(cffi:defcfun ("LLVMInitializeCore" LLVMInitializeCore) :void
  (R :pointer))

(cffi:defcfun ("LLVMShutdown" LLVMShutdown) :void)

(cffi:defcfun ("LLVMCreateMessage" LLVMCreateMessage) :string
  (Message :string))

(cffi:defcfun ("LLVMDisposeMessage" LLVMDisposeMessage) :void
  (Message :string))

(cffi:defcfun ("LLVMInstallFatalErrorHandler" LLVMInstallFatalErrorHandler) :void
  (Handler :pointer))

(cffi:defcfun ("LLVMResetFatalErrorHandler" LLVMResetFatalErrorHandler) :void)

(cffi:defcfun ("LLVMEnablePrettyStackTrace" LLVMEnablePrettyStackTrace) :void)

(cffi:defcfun ("LLVMContextCreate" LLVMContextCreate) :pointer)

(cffi:defcfun ("LLVMGetGlobalContext" LLVMGetGlobalContext) :pointer)

(cffi:defcfun ("LLVMContextDispose" LLVMContextDispose) :void
  (C :pointer))

(cffi:defcfun ("LLVMGetMDKindIDInContext" LLVMGetMDKindIDInContext) :unsigned-int
  (C :pointer)
  (Name :string)
  (SLen :unsigned-int))

(cffi:defcfun ("LLVMGetMDKindID" LLVMGetMDKindID) :unsigned-int
  (Name :string)
  (SLen :unsigned-int))

(cffi:defcfun ("LLVMModuleCreateWithName" LLVMModuleCreateWithName) :pointer
  (ModuleID :string))

(cffi:defcfun ("LLVMModuleCreateWithNameInContext" LLVMModuleCreateWithNameInContext) :pointer
  (ModuleID :string)
  (C :pointer))

(cffi:defcfun ("LLVMDisposeModule" LLVMDisposeModule) :void
  (M :pointer))

(cffi:defcfun ("LLVMGetDataLayout" LLVMGetDataLayout) :string
  (M :pointer))

(cffi:defcfun ("LLVMSetDataLayout" LLVMSetDataLayout) :void
  (M :pointer)
  (Triple :string))

(cffi:defcfun ("LLVMGetTarget" LLVMGetTarget) :string
  (M :pointer))

(cffi:defcfun ("LLVMSetTarget" LLVMSetTarget) :void
  (M :pointer)
  (Triple :string))

(cffi:defcfun ("LLVMDumpModule" LLVMDumpModule) :void
  (M :pointer))

(cffi:defcfun ("LLVMPrintModuleToFile" LLVMPrintModuleToFile) :int
  (M :pointer)
  (Filename :string)
  (ErrorMessage :pointer))

(cffi:defcfun ("LLVMPrintModuleToString" LLVMPrintModuleToString) :string
  (M :pointer))

(cffi:defcfun ("LLVMSetModuleInlineAsm" LLVMSetModuleInlineAsm) :void
  (M :pointer)
  (Asm :string))

(cffi:defcfun ("LLVMGetModuleContext" LLVMGetModuleContext) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMGetTypeByName" LLVMGetTypeByName) :pointer
  (M :pointer)
  (Name :string))

(cffi:defcfun ("LLVMGetNamedMetadataNumOperands" LLVMGetNamedMetadataNumOperands) :unsigned-int
  (M :pointer)
  (name :string))

(cffi:defcfun ("LLVMGetNamedMetadataOperands" LLVMGetNamedMetadataOperands) :void
  (M :pointer)
  (name :string)
  (Dest :pointer))

(cffi:defcfun ("LLVMAddNamedMetadataOperand" LLVMAddNamedMetadataOperand) :void
  (M :pointer)
  (name :string)
  (Val :pointer))

(cffi:defcfun ("LLVMAddFunction" LLVMAddFunction) :pointer
  (M :pointer)
  (Name :string)
  (FunctionTy :pointer))

(cffi:defcfun ("LLVMGetNamedFunction" LLVMGetNamedFunction) :pointer
  (M :pointer)
  (Name :string))

(cffi:defcfun ("LLVMGetFirstFunction" LLVMGetFirstFunction) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMGetLastFunction" LLVMGetLastFunction) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMGetNextFunction" LLVMGetNextFunction) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMGetPreviousFunction" LLVMGetPreviousFunction) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMGetTypeKind" LLVMGetTypeKind) LLVMTypeKind
  (Ty :pointer))

(cffi:defcfun ("LLVMTypeIsSized" LLVMTypeIsSized) :int
  (Ty :pointer))

(cffi:defcfun ("LLVMGetTypeContext" LLVMGetTypeContext) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMDumpType" LLVMDumpType) :void
  (Val :pointer))

(cffi:defcfun ("LLVMPrintTypeToString" LLVMPrintTypeToString) :string
  (Val :pointer))

(cffi:defcfun ("LLVMInt1TypeInContext" LLVMInt1TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMInt8TypeInContext" LLVMInt8TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMInt16TypeInContext" LLVMInt16TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMInt32TypeInContext" LLVMInt32TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMInt64TypeInContext" LLVMInt64TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMIntTypeInContext" LLVMIntTypeInContext) :pointer
  (C :pointer)
  (NumBits :unsigned-int))

(cffi:defcfun ("LLVMInt1Type" LLVMInt1Type) :pointer)

(cffi:defcfun ("LLVMInt8Type" LLVMInt8Type) :pointer)

(cffi:defcfun ("LLVMInt16Type" LLVMInt16Type) :pointer)

(cffi:defcfun ("LLVMInt32Type" LLVMInt32Type) :pointer)

(cffi:defcfun ("LLVMInt64Type" LLVMInt64Type) :pointer)

(cffi:defcfun ("LLVMIntType" LLVMIntType) :pointer
  (NumBits :unsigned-int))

(cffi:defcfun ("LLVMGetIntTypeWidth" LLVMGetIntTypeWidth) :unsigned-int
  (IntegerTy :pointer))

(cffi:defcfun ("LLVMHalfTypeInContext" LLVMHalfTypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMFloatTypeInContext" LLVMFloatTypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMDoubleTypeInContext" LLVMDoubleTypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMX86FP80TypeInContext" LLVMX86FP80TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMFP128TypeInContext" LLVMFP128TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMPPCFP128TypeInContext" LLVMPPCFP128TypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMHalfType" LLVMHalfType) :pointer)

(cffi:defcfun ("LLVMFloatType" LLVMFloatType) :pointer)

(cffi:defcfun ("LLVMDoubleType" LLVMDoubleType) :pointer)

(cffi:defcfun ("LLVMX86FP80Type" LLVMX86FP80Type) :pointer)

(cffi:defcfun ("LLVMFP128Type" LLVMFP128Type) :pointer)

(cffi:defcfun ("LLVMPPCFP128Type" LLVMPPCFP128Type) :pointer)

(cffi:defcfun ("LLVMFunctionType" LLVMFunctionType) :pointer
  (ReturnType :pointer)
  (ParamTypes :pointer)
  (ParamCount :unsigned-int)
  (IsVarArg :int))

(cffi:defcfun ("LLVMIsFunctionVarArg" LLVMIsFunctionVarArg) :int
  (FunctionTy :pointer))

(cffi:defcfun ("LLVMGetReturnType" LLVMGetReturnType) :pointer
  (FunctionTy :pointer))

(cffi:defcfun ("LLVMCountParamTypes" LLVMCountParamTypes) :unsigned-int
  (FunctionTy :pointer))

(cffi:defcfun ("LLVMGetParamTypes" LLVMGetParamTypes) :void
  (FunctionTy :pointer)
  (Dest :pointer))

(cffi:defcfun ("LLVMStructTypeInContext" LLVMStructTypeInContext) :pointer
  (C :pointer)
  (ElementTypes :pointer)
  (ElementCount :unsigned-int)
  (Packed :int))

(cffi:defcfun ("LLVMStructType" LLVMStructType) :pointer
  (ElementTypes :pointer)
  (ElementCount :unsigned-int)
  (Packed :int))

(cffi:defcfun ("LLVMStructCreateNamed" LLVMStructCreateNamed) :pointer
  (C :pointer)
  (Name :string))

(cffi:defcfun ("LLVMGetStructName" LLVMGetStructName) :string
  (Ty :pointer))

(cffi:defcfun ("LLVMStructSetBody" LLVMStructSetBody) :void
  (StructTy :pointer)
  (ElementTypes :pointer)
  (ElementCount :unsigned-int)
  (Packed :int))

(cffi:defcfun ("LLVMCountStructElementTypes" LLVMCountStructElementTypes) :unsigned-int
  (StructTy :pointer))

(cffi:defcfun ("LLVMGetStructElementTypes" LLVMGetStructElementTypes) :void
  (StructTy :pointer)
  (Dest :pointer))

(cffi:defcfun ("LLVMIsPackedStruct" LLVMIsPackedStruct) :int
  (StructTy :pointer))

(cffi:defcfun ("LLVMIsOpaqueStruct" LLVMIsOpaqueStruct) :int
  (StructTy :pointer))

(cffi:defcfun ("LLVMGetElementType" LLVMGetElementType) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMArrayType" LLVMArrayType) :pointer
  (ElementType :pointer)
  (ElementCount :unsigned-int))

(cffi:defcfun ("LLVMGetArrayLength" LLVMGetArrayLength) :unsigned-int
  (ArrayTy :pointer))

(cffi:defcfun ("LLVMPointerType" LLVMPointerType) :pointer
  (ElementType :pointer)
  (AddressSpace :unsigned-int))

(cffi:defcfun ("LLVMGetPointerAddressSpace" LLVMGetPointerAddressSpace) :unsigned-int
  (PointerTy :pointer))

(cffi:defcfun ("LLVMVectorType" LLVMVectorType) :pointer
  (ElementType :pointer)
  (ElementCount :unsigned-int))

(cffi:defcfun ("LLVMGetVectorSize" LLVMGetVectorSize) :unsigned-int
  (VectorTy :pointer))

(cffi:defcfun ("LLVMVoidTypeInContext" LLVMVoidTypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMLabelTypeInContext" LLVMLabelTypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMX86MMXTypeInContext" LLVMX86MMXTypeInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMVoidType" LLVMVoidType) :pointer)

(cffi:defcfun ("LLVMLabelType" LLVMLabelType) :pointer)

(cffi:defcfun ("LLVMX86MMXType" LLVMX86MMXType) :pointer)

(cffi:defcfun ("LLVMTypeOf" LLVMTypeOf) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMGetValueName" LLVMGetValueName) :string
  (Val :pointer))

(cffi:defcfun ("LLVMSetValueName" LLVMSetValueName) :void
  (Val :pointer)
  (Name :string))

(cffi:defcfun ("LLVMDumpValue" LLVMDumpValue) :void
  (Val :pointer))

(cffi:defcfun ("LLVMPrintValueToString" LLVMPrintValueToString) :string
  (Val :pointer))

(cffi:defcfun ("LLVMReplaceAllUsesWith" LLVMReplaceAllUsesWith) :void
  (OldVal :pointer)
  (NewVal :pointer))

(cffi:defcfun ("LLVMIsConstant" LLVMIsConstant) :int
  (Val :pointer))

(cffi:defcfun ("LLVMIsUndef" LLVMIsUndef) :int
  (Val :pointer))

(cffi:defcfun ("LLVMIsAArgument" LLVMIsAArgument) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsABasicBlock" LLVMIsABasicBlock) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAInlineAsm" LLVMIsAInlineAsm) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAMDNode" LLVMIsAMDNode) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAMDString" LLVMIsAMDString) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAUser" LLVMIsAUser) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstant" LLVMIsAConstant) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsABlockAddress" LLVMIsABlockAddress) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantAggregateZero" LLVMIsAConstantAggregateZero) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantArray" LLVMIsAConstantArray) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantDataSequential" LLVMIsAConstantDataSequential) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantDataArray" LLVMIsAConstantDataArray) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantDataVector" LLVMIsAConstantDataVector) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantExpr" LLVMIsAConstantExpr) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantFP" LLVMIsAConstantFP) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantInt" LLVMIsAConstantInt) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantPointerNull" LLVMIsAConstantPointerNull) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantStruct" LLVMIsAConstantStruct) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAConstantVector" LLVMIsAConstantVector) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAGlobalValue" LLVMIsAGlobalValue) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAFunction" LLVMIsAFunction) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAGlobalAlias" LLVMIsAGlobalAlias) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAGlobalVariable" LLVMIsAGlobalVariable) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAUndefValue" LLVMIsAUndefValue) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAInstruction" LLVMIsAInstruction) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsABinaryOperator" LLVMIsABinaryOperator) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsACallInst" LLVMIsACallInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAIntrinsicInst" LLVMIsAIntrinsicInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsADbgInfoIntrinsic" LLVMIsADbgInfoIntrinsic) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsADbgDeclareInst" LLVMIsADbgDeclareInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAMemIntrinsic" LLVMIsAMemIntrinsic) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAMemCpyInst" LLVMIsAMemCpyInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAMemMoveInst" LLVMIsAMemMoveInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAMemSetInst" LLVMIsAMemSetInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsACmpInst" LLVMIsACmpInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAFCmpInst" LLVMIsAFCmpInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAICmpInst" LLVMIsAICmpInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAExtractElementInst" LLVMIsAExtractElementInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAGetElementPtrInst" LLVMIsAGetElementPtrInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAInsertElementInst" LLVMIsAInsertElementInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAInsertValueInst" LLVMIsAInsertValueInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsALandingPadInst" LLVMIsALandingPadInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAPHINode" LLVMIsAPHINode) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsASelectInst" LLVMIsASelectInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAShuffleVectorInst" LLVMIsAShuffleVectorInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAStoreInst" LLVMIsAStoreInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsATerminatorInst" LLVMIsATerminatorInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsABranchInst" LLVMIsABranchInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAIndirectBrInst" LLVMIsAIndirectBrInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAInvokeInst" LLVMIsAInvokeInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAReturnInst" LLVMIsAReturnInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsASwitchInst" LLVMIsASwitchInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAUnreachableInst" LLVMIsAUnreachableInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAResumeInst" LLVMIsAResumeInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAUnaryInstruction" LLVMIsAUnaryInstruction) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAAllocaInst" LLVMIsAAllocaInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsACastInst" LLVMIsACastInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAAddrSpaceCastInst" LLVMIsAAddrSpaceCastInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsABitCastInst" LLVMIsABitCastInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAFPExtInst" LLVMIsAFPExtInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAFPToSIInst" LLVMIsAFPToSIInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAFPToUIInst" LLVMIsAFPToUIInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAFPTruncInst" LLVMIsAFPTruncInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAIntToPtrInst" LLVMIsAIntToPtrInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAPtrToIntInst" LLVMIsAPtrToIntInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsASExtInst" LLVMIsASExtInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsASIToFPInst" LLVMIsASIToFPInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsATruncInst" LLVMIsATruncInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAUIToFPInst" LLVMIsAUIToFPInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAZExtInst" LLVMIsAZExtInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAExtractValueInst" LLVMIsAExtractValueInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsALoadInst" LLVMIsALoadInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMIsAVAArgInst" LLVMIsAVAArgInst) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMGetFirstUse" LLVMGetFirstUse) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMGetNextUse" LLVMGetNextUse) :pointer
  (U :pointer))

(cffi:defcfun ("LLVMGetUser" LLVMGetUser) :pointer
  (U :pointer))

(cffi:defcfun ("LLVMGetUsedValue" LLVMGetUsedValue) :pointer
  (U :pointer))

(cffi:defcfun ("LLVMGetOperand" LLVMGetOperand) :pointer
  (Val :pointer)
  (Index :unsigned-int))

(cffi:defcfun ("LLVMSetOperand" LLVMSetOperand) :void
  (User :pointer)
  (Index :unsigned-int)
  (Val :pointer))

(cffi:defcfun ("LLVMGetNumOperands" LLVMGetNumOperands) :int
  (Val :pointer))

(cffi:defcfun ("LLVMConstNull" LLVMConstNull) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMConstAllOnes" LLVMConstAllOnes) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMGetUndef" LLVMGetUndef) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMIsNull" LLVMIsNull) :int
  (Val :pointer))

(cffi:defcfun ("LLVMConstPointerNull" LLVMConstPointerNull) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMConstInt" LLVMConstInt) :pointer
  (IntTy :pointer)
  (N :unsigned-long-long)
  (SignExtend :int))

(cffi:defcfun ("LLVMConstIntOfArbitraryPrecision" LLVMConstIntOfArbitraryPrecision) :pointer
  (IntTy :pointer)
  (NumWords :unsigned-int)
  (Words :pointer))

(cffi:defcfun ("LLVMConstIntOfString" LLVMConstIntOfString) :pointer
  (IntTy :pointer)
  (Text :string)
  (Radix :pointer))

(cffi:defcfun ("LLVMConstIntOfStringAndSize" LLVMConstIntOfStringAndSize) :pointer
  (IntTy :pointer)
  (Text :string)
  (SLen :unsigned-int)
  (Radix :pointer))

(cffi:defcfun ("LLVMConstReal" LLVMConstReal) :pointer
  (RealTy :pointer)
  (N :double))

(cffi:defcfun ("LLVMConstRealOfString" LLVMConstRealOfString) :pointer
  (RealTy :pointer)
  (Text :string))

(cffi:defcfun ("LLVMConstRealOfStringAndSize" LLVMConstRealOfStringAndSize) :pointer
  (RealTy :pointer)
  (Text :string)
  (SLen :unsigned-int))

(cffi:defcfun ("LLVMConstIntGetZExtValue" LLVMConstIntGetZExtValue) :unsigned-long-long
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstIntGetSExtValue" LLVMConstIntGetSExtValue) :long-long
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstStringInContext" LLVMConstStringInContext) :pointer
  (C :pointer)
  (Str :string)
  (Length :unsigned-int)
  (DontNullTerminate :int))

(cffi:defcfun ("LLVMConstString" LLVMConstString) :pointer
  (Str :string)
  (Length :unsigned-int)
  (DontNullTerminate :int))

(cffi:defcfun ("LLVMConstStructInContext" LLVMConstStructInContext) :pointer
  (C :pointer)
  (ConstantVals :pointer)
  (Count :unsigned-int)
  (Packed :int))

(cffi:defcfun ("LLVMConstStruct" LLVMConstStruct) :pointer
  (ConstantVals :pointer)
  (Count :unsigned-int)
  (Packed :int))

(cffi:defcfun ("LLVMConstArray" LLVMConstArray) :pointer
  (ElementTy :pointer)
  (ConstantVals :pointer)
  (Length :unsigned-int))

(cffi:defcfun ("LLVMConstNamedStruct" LLVMConstNamedStruct) :pointer
  (StructTy :pointer)
  (ConstantVals :pointer)
  (Count :unsigned-int))

(cffi:defcfun ("LLVMConstVector" LLVMConstVector) :pointer
  (ScalarConstantVals :pointer)
  (Size :unsigned-int))

(cffi:defcfun ("LLVMGetConstOpcode" LLVMGetConstOpcode) LLVMOpcode
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMAlignOf" LLVMAlignOf) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMSizeOf" LLVMSizeOf) :pointer
  (Ty :pointer))

(cffi:defcfun ("LLVMConstNeg" LLVMConstNeg) :pointer
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstNSWNeg" LLVMConstNSWNeg) :pointer
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstNUWNeg" LLVMConstNUWNeg) :pointer
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstFNeg" LLVMConstFNeg) :pointer
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstNot" LLVMConstNot) :pointer
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMConstAdd" LLVMConstAdd) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstNSWAdd" LLVMConstNSWAdd) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstNUWAdd" LLVMConstNUWAdd) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstFAdd" LLVMConstFAdd) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstSub" LLVMConstSub) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstNSWSub" LLVMConstNSWSub) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstNUWSub" LLVMConstNUWSub) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstFSub" LLVMConstFSub) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstMul" LLVMConstMul) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstNSWMul" LLVMConstNSWMul) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstNUWMul" LLVMConstNUWMul) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstFMul" LLVMConstFMul) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstUDiv" LLVMConstUDiv) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstSDiv" LLVMConstSDiv) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstExactSDiv" LLVMConstExactSDiv) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstFDiv" LLVMConstFDiv) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstURem" LLVMConstURem) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstSRem" LLVMConstSRem) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstFRem" LLVMConstFRem) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstAnd" LLVMConstAnd) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstOr" LLVMConstOr) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstXor" LLVMConstXor) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstICmp" LLVMConstICmp) :pointer
  (Predicate LLVMIntPredicate)
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstFCmp" LLVMConstFCmp) :pointer
  (Predicate LLVMRealPredicate)
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstShl" LLVMConstShl) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstLShr" LLVMConstLShr) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstAShr" LLVMConstAShr) :pointer
  (LHSConstant :pointer)
  (RHSConstant :pointer))

(cffi:defcfun ("LLVMConstGEP" LLVMConstGEP) :pointer
  (ConstantVal :pointer)
  (ConstantIndices :pointer)
  (NumIndices :unsigned-int))

(cffi:defcfun ("LLVMConstInBoundsGEP" LLVMConstInBoundsGEP) :pointer
  (ConstantVal :pointer)
  (ConstantIndices :pointer)
  (NumIndices :unsigned-int))

(cffi:defcfun ("LLVMConstTrunc" LLVMConstTrunc) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstSExt" LLVMConstSExt) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstZExt" LLVMConstZExt) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstFPTrunc" LLVMConstFPTrunc) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstFPExt" LLVMConstFPExt) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstUIToFP" LLVMConstUIToFP) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstSIToFP" LLVMConstSIToFP) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstFPToUI" LLVMConstFPToUI) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstFPToSI" LLVMConstFPToSI) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstPtrToInt" LLVMConstPtrToInt) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstIntToPtr" LLVMConstIntToPtr) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstBitCast" LLVMConstBitCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstAddrSpaceCast" LLVMConstAddrSpaceCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstZExtOrBitCast" LLVMConstZExtOrBitCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstSExtOrBitCast" LLVMConstSExtOrBitCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstTruncOrBitCast" LLVMConstTruncOrBitCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstPointerCast" LLVMConstPointerCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstIntCast" LLVMConstIntCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer)
  (isSigned :int))

(cffi:defcfun ("LLVMConstFPCast" LLVMConstFPCast) :pointer
  (ConstantVal :pointer)
  (ToType :pointer))

(cffi:defcfun ("LLVMConstSelect" LLVMConstSelect) :pointer
  (ConstantCondition :pointer)
  (ConstantIfTrue :pointer)
  (ConstantIfFalse :pointer))

(cffi:defcfun ("LLVMConstExtractElement" LLVMConstExtractElement) :pointer
  (VectorConstant :pointer)
  (IndexConstant :pointer))

(cffi:defcfun ("LLVMConstInsertElement" LLVMConstInsertElement) :pointer
  (VectorConstant :pointer)
  (ElementValueConstant :pointer)
  (IndexConstant :pointer))

(cffi:defcfun ("LLVMConstShuffleVector" LLVMConstShuffleVector) :pointer
  (VectorAConstant :pointer)
  (VectorBConstant :pointer)
  (MaskConstant :pointer))

(cffi:defcfun ("LLVMConstExtractValue" LLVMConstExtractValue) :pointer
  (AggConstant :pointer)
  (IdxList :pointer)
  (NumIdx :unsigned-int))

(cffi:defcfun ("LLVMConstInsertValue" LLVMConstInsertValue) :pointer
  (AggConstant :pointer)
  (ElementValueConstant :pointer)
  (IdxList :pointer)
  (NumIdx :unsigned-int))

(cffi:defcfun ("LLVMConstInlineAsm" LLVMConstInlineAsm) :pointer
  (Ty :pointer)
  (AsmString :string)
  (Constraints :string)
  (HasSideEffects :int)
  (IsAlignStack :int))

(cffi:defcfun ("LLVMBlockAddress" LLVMBlockAddress) :pointer
  (F :pointer)
  (BB :pointer))

(cffi:defcfun ("LLVMGetGlobalParent" LLVMGetGlobalParent) :pointer
  (Global :pointer))

(cffi:defcfun ("LLVMIsDeclaration" LLVMIsDeclaration) :int
  (Global :pointer))

(cffi:defcfun ("LLVMGetLinkage" LLVMGetLinkage) LLVMLinkage
  (Global :pointer))

(cffi:defcfun ("LLVMSetLinkage" LLVMSetLinkage) :void
  (Global :pointer)
  (Linkage LLVMLinkage))

(cffi:defcfun ("LLVMGetSection" LLVMGetSection) :string
  (Global :pointer))

(cffi:defcfun ("LLVMSetSection" LLVMSetSection) :void
  (Global :pointer)
  (Section :string))

(cffi:defcfun ("LLVMGetVisibility" LLVMGetVisibility) LLVMVisibility
  (Global :pointer))

(cffi:defcfun ("LLVMSetVisibility" LLVMSetVisibility) :void
  (Global :pointer)
  (Viz LLVMVisibility))

(cffi:defcfun ("LLVMGetAlignment" LLVMGetAlignment) :unsigned-int
  (V :pointer))

(cffi:defcfun ("LLVMSetAlignment" LLVMSetAlignment) :void
  (V :pointer)
  (Bytes :unsigned-int))

(cffi:defcfun ("LLVMAddGlobal" LLVMAddGlobal) :pointer
  (M :pointer)
  (Ty :pointer)
  (Name :string))

(cffi:defcfun ("LLVMAddGlobalInAddressSpace" LLVMAddGlobalInAddressSpace) :pointer
  (M :pointer)
  (Ty :pointer)
  (Name :string)
  (AddressSpace :unsigned-int))

(cffi:defcfun ("LLVMGetNamedGlobal" LLVMGetNamedGlobal) :pointer
  (M :pointer)
  (Name :string))

(cffi:defcfun ("LLVMGetFirstGlobal" LLVMGetFirstGlobal) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMGetLastGlobal" LLVMGetLastGlobal) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMGetNextGlobal" LLVMGetNextGlobal) :pointer
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMGetPreviousGlobal" LLVMGetPreviousGlobal) :pointer
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMDeleteGlobal" LLVMDeleteGlobal) :void
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMGetInitializer" LLVMGetInitializer) :pointer
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMSetInitializer" LLVMSetInitializer) :void
  (GlobalVar :pointer)
  (ConstantVal :pointer))

(cffi:defcfun ("LLVMIsThreadLocal" LLVMIsThreadLocal) :int
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMSetThreadLocal" LLVMSetThreadLocal) :void
  (GlobalVar :pointer)
  (IsThreadLocal :int))

(cffi:defcfun ("LLVMIsGlobalConstant" LLVMIsGlobalConstant) :int
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMSetGlobalConstant" LLVMSetGlobalConstant) :void
  (GlobalVar :pointer)
  (IsConstant :int))

(cffi:defcfun ("LLVMGetThreadLocalMode" LLVMGetThreadLocalMode) LLVMThreadLocalMode
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMSetThreadLocalMode" LLVMSetThreadLocalMode) :void
  (GlobalVar :pointer)
  (Mode LLVMThreadLocalMode))

(cffi:defcfun ("LLVMIsExternallyInitialized" LLVMIsExternallyInitialized) :int
  (GlobalVar :pointer))

(cffi:defcfun ("LLVMSetExternallyInitialized" LLVMSetExternallyInitialized) :void
  (GlobalVar :pointer)
  (IsExtInit :int))

(cffi:defcfun ("LLVMAddAlias" LLVMAddAlias) :pointer
  (M :pointer)
  (Ty :pointer)
  (Aliasee :pointer)
  (Name :string))

(cffi:defcfun ("LLVMDeleteFunction" LLVMDeleteFunction) :void
  (Fn :pointer))

(cffi:defcfun ("LLVMGetIntrinsicID" LLVMGetIntrinsicID) :unsigned-int
  (Fn :pointer))

(cffi:defcfun ("LLVMGetFunctionCallConv" LLVMGetFunctionCallConv) :unsigned-int
  (Fn :pointer))

(cffi:defcfun ("LLVMSetFunctionCallConv" LLVMSetFunctionCallConv) :void
  (Fn :pointer)
  (CC :unsigned-int))

(cffi:defcfun ("LLVMGetGC" LLVMGetGC) :string
  (Fn :pointer))

(cffi:defcfun ("LLVMSetGC" LLVMSetGC) :void
  (Fn :pointer)
  (Name :string))

(cffi:defcfun ("LLVMAddFunctionAttr" LLVMAddFunctionAttr) :void
  (Fn :pointer)
  (PA LLVMAttribute))

(cffi:defcfun ("LLVMAddTargetDependentFunctionAttr" LLVMAddTargetDependentFunctionAttr) :void
  (Fn :pointer)
  (A :string)
  (V :string))

(cffi:defcfun ("LLVMGetFunctionAttr" LLVMGetFunctionAttr) LLVMAttribute
  (Fn :pointer))

(cffi:defcfun ("LLVMRemoveFunctionAttr" LLVMRemoveFunctionAttr) :void
  (Fn :pointer)
  (PA LLVMAttribute))

(cffi:defcfun ("LLVMCountParams" LLVMCountParams) :unsigned-int
  (Fn :pointer))

(cffi:defcfun ("LLVMGetParams" LLVMGetParams) :void
  (Fn :pointer)
  (Params :pointer))

(cffi:defcfun ("LLVMGetParam" LLVMGetParam) :pointer
  (Fn :pointer)
  (Index :unsigned-int))

(cffi:defcfun ("LLVMGetParamParent" LLVMGetParamParent) :pointer
  (Inst :pointer))

(cffi:defcfun ("LLVMGetFirstParam" LLVMGetFirstParam) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMGetLastParam" LLVMGetLastParam) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMGetNextParam" LLVMGetNextParam) :pointer
  (Arg :pointer))

(cffi:defcfun ("LLVMGetPreviousParam" LLVMGetPreviousParam) :pointer
  (Arg :pointer))

(cffi:defcfun ("LLVMAddAttribute" LLVMAddAttribute) :void
  (Arg :pointer)
  (PA LLVMAttribute))

(cffi:defcfun ("LLVMRemoveAttribute" LLVMRemoveAttribute) :void
  (Arg :pointer)
  (PA LLVMAttribute))

(cffi:defcfun ("LLVMGetAttribute" LLVMGetAttribute) LLVMAttribute
  (Arg :pointer))

(cffi:defcfun ("LLVMSetParamAlignment" LLVMSetParamAlignment) :void
  (Arg :pointer)
  (align :unsigned-int))

(cffi:defcfun ("LLVMMDStringInContext" LLVMMDStringInContext) :pointer
  (C :pointer)
  (Str :string)
  (SLen :unsigned-int))

(cffi:defcfun ("LLVMMDString" LLVMMDString) :pointer
  (Str :string)
  (SLen :unsigned-int))

(cffi:defcfun ("LLVMMDNodeInContext" LLVMMDNodeInContext) :pointer
  (C :pointer)
  (Vals :pointer)
  (Count :unsigned-int))

(cffi:defcfun ("LLVMMDNode" LLVMMDNode) :pointer
  (Vals :pointer)
  (Count :unsigned-int))

(cffi:defcfun ("LLVMGetMDString" LLVMGetMDString) :string
  (V :pointer)
  (Len :pointer))

(cffi:defcfun ("LLVMGetMDNodeNumOperands" LLVMGetMDNodeNumOperands) :unsigned-int
  (V :pointer))

(cffi:defcfun ("LLVMGetMDNodeOperands" LLVMGetMDNodeOperands) :void
  (V :pointer)
  (Dest :pointer))

(cffi:defcfun ("LLVMBasicBlockAsValue" LLVMBasicBlockAsValue) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMValueIsBasicBlock" LLVMValueIsBasicBlock) :int
  (Val :pointer))

(cffi:defcfun ("LLVMValueAsBasicBlock" LLVMValueAsBasicBlock) :pointer
  (Val :pointer))

(cffi:defcfun ("LLVMGetBasicBlockParent" LLVMGetBasicBlockParent) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMGetBasicBlockTerminator" LLVMGetBasicBlockTerminator) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMCountBasicBlocks" LLVMCountBasicBlocks) :unsigned-int
  (Fn :pointer))

(cffi:defcfun ("LLVMGetBasicBlocks" LLVMGetBasicBlocks) :void
  (Fn :pointer)
  (BasicBlocks :pointer))

(cffi:defcfun ("LLVMGetFirstBasicBlock" LLVMGetFirstBasicBlock) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMGetLastBasicBlock" LLVMGetLastBasicBlock) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMGetNextBasicBlock" LLVMGetNextBasicBlock) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMGetPreviousBasicBlock" LLVMGetPreviousBasicBlock) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMGetEntryBasicBlock" LLVMGetEntryBasicBlock) :pointer
  (Fn :pointer))

(cffi:defcfun ("LLVMAppendBasicBlockInContext" LLVMAppendBasicBlockInContext) :pointer
  (C :pointer)
  (Fn :pointer)
  (Name :string))

(cffi:defcfun ("LLVMAppendBasicBlock" LLVMAppendBasicBlock) :pointer
  (Fn :pointer)
  (Name :string))

(cffi:defcfun ("LLVMInsertBasicBlockInContext" LLVMInsertBasicBlockInContext) :pointer
  (C :pointer)
  (BB :pointer)
  (Name :string))

(cffi:defcfun ("LLVMInsertBasicBlock" LLVMInsertBasicBlock) :pointer
  (InsertBeforeBB :pointer)
  (Name :string))

(cffi:defcfun ("LLVMDeleteBasicBlock" LLVMDeleteBasicBlock) :void
  (BB :pointer))

(cffi:defcfun ("LLVMRemoveBasicBlockFromParent" LLVMRemoveBasicBlockFromParent) :void
  (BB :pointer))

(cffi:defcfun ("LLVMMoveBasicBlockBefore" LLVMMoveBasicBlockBefore) :void
  (BB :pointer)
  (MovePos :pointer))

(cffi:defcfun ("LLVMMoveBasicBlockAfter" LLVMMoveBasicBlockAfter) :void
  (BB :pointer)
  (MovePos :pointer))

(cffi:defcfun ("LLVMGetFirstInstruction" LLVMGetFirstInstruction) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMGetLastInstruction" LLVMGetLastInstruction) :pointer
  (BB :pointer))

(cffi:defcfun ("LLVMHasMetadata" LLVMHasMetadata) :int
  (Val :pointer))

(cffi:defcfun ("LLVMGetMetadata" LLVMGetMetadata) :pointer
  (Val :pointer)
  (KindID :unsigned-int))

(cffi:defcfun ("LLVMSetMetadata" LLVMSetMetadata) :void
  (Val :pointer)
  (KindID :unsigned-int)
  (Node :pointer))

(cffi:defcfun ("LLVMGetInstructionParent" LLVMGetInstructionParent) :pointer
  (Inst :pointer))

(cffi:defcfun ("LLVMGetNextInstruction" LLVMGetNextInstruction) :pointer
  (Inst :pointer))

(cffi:defcfun ("LLVMGetPreviousInstruction" LLVMGetPreviousInstruction) :pointer
  (Inst :pointer))

(cffi:defcfun ("LLVMInstructionEraseFromParent" LLVMInstructionEraseFromParent) :void
  (Inst :pointer))

(cffi:defcfun ("LLVMGetInstructionOpcode" LLVMGetInstructionOpcode) LLVMOpcode
  (Inst :pointer))

(cffi:defcfun ("LLVMGetICmpPredicate" LLVMGetICmpPredicate) LLVMIntPredicate
  (Inst :pointer))

(cffi:defcfun ("LLVMSetInstructionCallConv" LLVMSetInstructionCallConv) :void
  (Instr :pointer)
  (CC :unsigned-int))

(cffi:defcfun ("LLVMGetInstructionCallConv" LLVMGetInstructionCallConv) :unsigned-int
  (Instr :pointer))

(cffi:defcfun ("LLVMAddInstrAttribute" LLVMAddInstrAttribute) :void
  (Instr :pointer)
  (index :unsigned-int)
  (arg2 LLVMAttribute))

(cffi:defcfun ("LLVMRemoveInstrAttribute" LLVMRemoveInstrAttribute) :void
  (Instr :pointer)
  (index :unsigned-int)
  (arg2 LLVMAttribute))

(cffi:defcfun ("LLVMSetInstrParamAlignment" LLVMSetInstrParamAlignment) :void
  (Instr :pointer)
  (index :unsigned-int)
  (align :unsigned-int))

(cffi:defcfun ("LLVMIsTailCall" LLVMIsTailCall) :int
  (CallInst :pointer))

(cffi:defcfun ("LLVMSetTailCall" LLVMSetTailCall) :void
  (CallInst :pointer)
  (IsTailCall :int))

(cffi:defcfun ("LLVMGetSwitchDefaultDest" LLVMGetSwitchDefaultDest) :pointer
  (SwitchInstr :pointer))

(cffi:defcfun ("LLVMAddIncoming" LLVMAddIncoming) :void
  (PhiNode :pointer)
  (IncomingValues :pointer)
  (IncomingBlocks :pointer)
  (Count :unsigned-int))

(cffi:defcfun ("LLVMCountIncoming" LLVMCountIncoming) :unsigned-int
  (PhiNode :pointer))

(cffi:defcfun ("LLVMGetIncomingValue" LLVMGetIncomingValue) :pointer
  (PhiNode :pointer)
  (Index :unsigned-int))

(cffi:defcfun ("LLVMGetIncomingBlock" LLVMGetIncomingBlock) :pointer
  (PhiNode :pointer)
  (Index :unsigned-int))

(cffi:defcfun ("LLVMCreateBuilderInContext" LLVMCreateBuilderInContext) :pointer
  (C :pointer))

(cffi:defcfun ("LLVMCreateBuilder" LLVMCreateBuilder) :pointer)

(cffi:defcfun ("LLVMPositionBuilder" LLVMPositionBuilder) :void
  (Builder :pointer)
  (Block :pointer)
  (Instr :pointer))

(cffi:defcfun ("LLVMPositionBuilderBefore" LLVMPositionBuilderBefore) :void
  (Builder :pointer)
  (Instr :pointer))

(cffi:defcfun ("LLVMPositionBuilderAtEnd" LLVMPositionBuilderAtEnd) :void
  (Builder :pointer)
  (Block :pointer))

(cffi:defcfun ("LLVMGetInsertBlock" LLVMGetInsertBlock) :pointer
  (Builder :pointer))

(cffi:defcfun ("LLVMClearInsertionPosition" LLVMClearInsertionPosition) :void
  (Builder :pointer))

(cffi:defcfun ("LLVMInsertIntoBuilder" LLVMInsertIntoBuilder) :void
  (Builder :pointer)
  (Instr :pointer))

(cffi:defcfun ("LLVMInsertIntoBuilderWithName" LLVMInsertIntoBuilderWithName) :void
  (Builder :pointer)
  (Instr :pointer)
  (Name :string))

(cffi:defcfun ("LLVMDisposeBuilder" LLVMDisposeBuilder) :void
  (Builder :pointer))

(cffi:defcfun ("LLVMSetCurrentDebugLocation" LLVMSetCurrentDebugLocation) :void
  (Builder :pointer)
  (L :pointer))

(cffi:defcfun ("LLVMGetCurrentDebugLocation" LLVMGetCurrentDebugLocation) :pointer
  (Builder :pointer))

(cffi:defcfun ("LLVMSetInstDebugLocation" LLVMSetInstDebugLocation) :void
  (Builder :pointer)
  (Inst :pointer))

(cffi:defcfun ("LLVMBuildRetVoid" LLVMBuildRetVoid) :pointer
  (arg0 :pointer))

(cffi:defcfun ("LLVMBuildRet" LLVMBuildRet) :pointer
  (arg0 :pointer)
  (V :pointer))

(cffi:defcfun ("LLVMBuildAggregateRet" LLVMBuildAggregateRet) :pointer
  (arg0 :pointer)
  (RetVals :pointer)
  (N :unsigned-int))

(cffi:defcfun ("LLVMBuildBr" LLVMBuildBr) :pointer
  (arg0 :pointer)
  (Dest :pointer))

(cffi:defcfun ("LLVMBuildCondBr" LLVMBuildCondBr) :pointer
  (arg0 :pointer)
  (If :pointer)
  (Then :pointer)
  (Else :pointer))

(cffi:defcfun ("LLVMBuildSwitch" LLVMBuildSwitch) :pointer
  (arg0 :pointer)
  (V :pointer)
  (Else :pointer)
  (NumCases :unsigned-int))

(cffi:defcfun ("LLVMBuildIndirectBr" LLVMBuildIndirectBr) :pointer
  (B :pointer)
  (Addr :pointer)
  (NumDests :unsigned-int))

(cffi:defcfun ("LLVMBuildInvoke" LLVMBuildInvoke) :pointer
  (arg0 :pointer)
  (Fn :pointer)
  (Args :pointer)
  (NumArgs :unsigned-int)
  (Then :pointer)
  (Catch :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildLandingPad" LLVMBuildLandingPad) :pointer
  (B :pointer)
  (Ty :pointer)
  (PersFn :pointer)
  (NumClauses :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildResume" LLVMBuildResume) :pointer
  (B :pointer)
  (Exn :pointer))

(cffi:defcfun ("LLVMBuildUnreachable" LLVMBuildUnreachable) :pointer
  (arg0 :pointer))

(cffi:defcfun ("LLVMAddCase" LLVMAddCase) :void
  (Switch :pointer)
  (OnVal :pointer)
  (Dest :pointer))

(cffi:defcfun ("LLVMAddDestination" LLVMAddDestination) :void
  (IndirectBr :pointer)
  (Dest :pointer))

(cffi:defcfun ("LLVMAddClause" LLVMAddClause) :void
  (LandingPad :pointer)
  (ClauseVal :pointer))

(cffi:defcfun ("LLVMSetCleanup" LLVMSetCleanup) :void
  (LandingPad :pointer)
  (Val :int))

(cffi:defcfun ("LLVMBuildAdd" LLVMBuildAdd) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNSWAdd" LLVMBuildNSWAdd) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNUWAdd" LLVMBuildNUWAdd) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFAdd" LLVMBuildFAdd) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildSub" LLVMBuildSub) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNSWSub" LLVMBuildNSWSub) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNUWSub" LLVMBuildNUWSub) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFSub" LLVMBuildFSub) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildMul" LLVMBuildMul) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNSWMul" LLVMBuildNSWMul) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNUWMul" LLVMBuildNUWMul) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFMul" LLVMBuildFMul) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildUDiv" LLVMBuildUDiv) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildSDiv" LLVMBuildSDiv) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildExactSDiv" LLVMBuildExactSDiv) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFDiv" LLVMBuildFDiv) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildURem" LLVMBuildURem) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildSRem" LLVMBuildSRem) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFRem" LLVMBuildFRem) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildShl" LLVMBuildShl) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildLShr" LLVMBuildLShr) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildAShr" LLVMBuildAShr) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildAnd" LLVMBuildAnd) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildOr" LLVMBuildOr) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildXor" LLVMBuildXor) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildBinOp" LLVMBuildBinOp) :pointer
  (B :pointer)
  (Op LLVMOpcode)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNeg" LLVMBuildNeg) :pointer
  (arg0 :pointer)
  (V :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNSWNeg" LLVMBuildNSWNeg) :pointer
  (B :pointer)
  (V :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNUWNeg" LLVMBuildNUWNeg) :pointer
  (B :pointer)
  (V :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFNeg" LLVMBuildFNeg) :pointer
  (arg0 :pointer)
  (V :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildNot" LLVMBuildNot) :pointer
  (arg0 :pointer)
  (V :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildMalloc" LLVMBuildMalloc) :pointer
  (arg0 :pointer)
  (Ty :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildArrayMalloc" LLVMBuildArrayMalloc) :pointer
  (arg0 :pointer)
  (Ty :pointer)
  (Val :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildAlloca" LLVMBuildAlloca) :pointer
  (arg0 :pointer)
  (Ty :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildArrayAlloca" LLVMBuildArrayAlloca) :pointer
  (arg0 :pointer)
  (Ty :pointer)
  (Val :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFree" LLVMBuildFree) :pointer
  (arg0 :pointer)
  (PointerVal :pointer))

(cffi:defcfun ("LLVMBuildLoad" LLVMBuildLoad) :pointer
  (arg0 :pointer)
  (PointerVal :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildStore" LLVMBuildStore) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (Ptr :pointer))

(cffi:defcfun ("LLVMBuildGEP" LLVMBuildGEP) :pointer
  (B :pointer)
  (Pointer :pointer)
  (Indices :pointer)
  (NumIndices :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildInBoundsGEP" LLVMBuildInBoundsGEP) :pointer
  (B :pointer)
  (Pointer :pointer)
  (Indices :pointer)
  (NumIndices :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildStructGEP" LLVMBuildStructGEP) :pointer
  (B :pointer)
  (Pointer :pointer)
  (Idx :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildGlobalString" LLVMBuildGlobalString) :pointer
  (B :pointer)
  (Str :string)
  (Name :string))

(cffi:defcfun ("LLVMBuildGlobalStringPtr" LLVMBuildGlobalStringPtr) :pointer
  (B :pointer)
  (Str :string)
  (Name :string))

(cffi:defcfun ("LLVMGetVolatile" LLVMGetVolatile) :int
  (MemoryAccessInst :pointer))

(cffi:defcfun ("LLVMSetVolatile" LLVMSetVolatile) :void
  (MemoryAccessInst :pointer)
  (IsVolatile :int))

(cffi:defcfun ("LLVMBuildTrunc" LLVMBuildTrunc) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildZExt" LLVMBuildZExt) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildSExt" LLVMBuildSExt) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFPToUI" LLVMBuildFPToUI) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFPToSI" LLVMBuildFPToSI) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildUIToFP" LLVMBuildUIToFP) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildSIToFP" LLVMBuildSIToFP) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFPTrunc" LLVMBuildFPTrunc) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFPExt" LLVMBuildFPExt) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildPtrToInt" LLVMBuildPtrToInt) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildIntToPtr" LLVMBuildIntToPtr) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildBitCast" LLVMBuildBitCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildAddrSpaceCast" LLVMBuildAddrSpaceCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildZExtOrBitCast" LLVMBuildZExtOrBitCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildSExtOrBitCast" LLVMBuildSExtOrBitCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildTruncOrBitCast" LLVMBuildTruncOrBitCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildCast" LLVMBuildCast) :pointer
  (B :pointer)
  (Op LLVMOpcode)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildPointerCast" LLVMBuildPointerCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildIntCast" LLVMBuildIntCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFPCast" LLVMBuildFPCast) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (DestTy :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildICmp" LLVMBuildICmp) :pointer
  (arg0 :pointer)
  (Op LLVMIntPredicate)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildFCmp" LLVMBuildFCmp) :pointer
  (arg0 :pointer)
  (Op LLVMRealPredicate)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildPhi" LLVMBuildPhi) :pointer
  (arg0 :pointer)
  (Ty :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildCall" LLVMBuildCall) :pointer
  (arg0 :pointer)
  (Fn :pointer)
  (Args :pointer)
  (NumArgs :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildSelect" LLVMBuildSelect) :pointer
  (arg0 :pointer)
  (If :pointer)
  (Then :pointer)
  (Else :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildVAArg" LLVMBuildVAArg) :pointer
  (arg0 :pointer)
  (List :pointer)
  (Ty :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildExtractElement" LLVMBuildExtractElement) :pointer
  (arg0 :pointer)
  (VecVal :pointer)
  (Index :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildInsertElement" LLVMBuildInsertElement) :pointer
  (arg0 :pointer)
  (VecVal :pointer)
  (EltVal :pointer)
  (Index :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildShuffleVector" LLVMBuildShuffleVector) :pointer
  (arg0 :pointer)
  (V1 :pointer)
  (V2 :pointer)
  (Mask :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildExtractValue" LLVMBuildExtractValue) :pointer
  (arg0 :pointer)
  (AggVal :pointer)
  (Index :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildInsertValue" LLVMBuildInsertValue) :pointer
  (arg0 :pointer)
  (AggVal :pointer)
  (EltVal :pointer)
  (Index :unsigned-int)
  (Name :string))

(cffi:defcfun ("LLVMBuildIsNull" LLVMBuildIsNull) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildIsNotNull" LLVMBuildIsNotNull) :pointer
  (arg0 :pointer)
  (Val :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildPtrDiff" LLVMBuildPtrDiff) :pointer
  (arg0 :pointer)
  (LHS :pointer)
  (RHS :pointer)
  (Name :string))

(cffi:defcfun ("LLVMBuildAtomicRMW" LLVMBuildAtomicRMW) :pointer
  (B :pointer)
  (op LLVMAtomicRMWBinOp)
  (PTR :pointer)
  (Val :pointer)
  (ordering LLVMAtomicOrdering)
  (singleThread :int))

(cffi:defcfun ("LLVMCreateModuleProviderForExistingModule" LLVMCreateModuleProviderForExistingModule) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMDisposeModuleProvider" LLVMDisposeModuleProvider) :void
  (M :pointer))

(cffi:defcfun ("LLVMCreateMemoryBufferWithContentsOfFile" LLVMCreateMemoryBufferWithContentsOfFile) :int
  (Path :string)
  (OutMemBuf :pointer)
  (OutMessage :pointer))

(cffi:defcfun ("LLVMCreateMemoryBufferWithSTDIN" LLVMCreateMemoryBufferWithSTDIN) :int
  (OutMemBuf :pointer)
  (OutMessage :pointer))

(cffi:defcfun ("LLVMCreateMemoryBufferWithMemoryRange" LLVMCreateMemoryBufferWithMemoryRange) :pointer
  (InputData :string)
  (InputDataLength :pointer)
  (BufferName :string)
  (RequiresNullTerminator :int))

(cffi:defcfun ("LLVMCreateMemoryBufferWithMemoryRangeCopy" LLVMCreateMemoryBufferWithMemoryRangeCopy) :pointer
  (InputData :string)
  (InputDataLength :pointer)
  (BufferName :string))

(cffi:defcfun ("LLVMGetBufferStart" LLVMGetBufferStart) :string
  (MemBuf :pointer))

(cffi:defcfun ("LLVMGetBufferSize" LLVMGetBufferSize) :pointer
  (MemBuf :pointer))

(cffi:defcfun ("LLVMDisposeMemoryBuffer" LLVMDisposeMemoryBuffer) :void
  (MemBuf :pointer))

(cffi:defcfun ("LLVMGetGlobalPassRegistry" LLVMGetGlobalPassRegistry) :pointer)

(cffi:defcfun ("LLVMCreatePassManager" LLVMCreatePassManager) :pointer)

(cffi:defcfun ("LLVMCreateFunctionPassManagerForModule" LLVMCreateFunctionPassManagerForModule) :pointer
  (M :pointer))

(cffi:defcfun ("LLVMCreateFunctionPassManager" LLVMCreateFunctionPassManager) :pointer
  (MP :pointer))

(cffi:defcfun ("LLVMRunPassManager" LLVMRunPassManager) :int
  (PM :pointer)
  (M :pointer))

(cffi:defcfun ("LLVMInitializeFunctionPassManager" LLVMInitializeFunctionPassManager) :int
  (FPM :pointer))

(cffi:defcfun ("LLVMRunFunctionPassManager" LLVMRunFunctionPassManager) :int
  (FPM :pointer)
  (F :pointer))

(cffi:defcfun ("LLVMFinalizeFunctionPassManager" LLVMFinalizeFunctionPassManager) :int
  (FPM :pointer))

(cffi:defcfun ("LLVMDisposePassManager" LLVMDisposePassManager) :void
  (PM :pointer))

(cffi:defcfun ("LLVMStartMultithreaded" LLVMStartMultithreaded) :int)

(cffi:defcfun ("LLVMStopMultithreaded" LLVMStopMultithreaded) :void)

(cffi:defcfun ("LLVMIsMultithreaded" LLVMIsMultithreaded) :int)


